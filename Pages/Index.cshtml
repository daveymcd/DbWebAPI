@page "~/Home/SCxPage/Index"
@model DbWebAPI.IndexModel
@{
    ViewData["Title"] = "Index";
}
@using System.IO;
@using System.Text;
@using DbWebAPI.Helpers;

@section scripts{

    <script>
      @*// This JQuery click handler function is wired to all clickables with an 'id="modal"' attribute.
        // By specifying class="search" or class="edit", the event url points to the HTML of the handler
        // (_PopupSearch.cshtml, _PopupEdit.cshtml etc) which the JQuery will reference to load the partial view into
        // the 'popup-modal' Div of the Html imediately below here, and toggle the popup between hidden and visible.
        //
        // Note: When table row is clicked (in <tr>), the query string is tacked onto the end of the URL.
        //
      *@
        $(function () {
            var placeholderPopup = $('#modal-insert');

            $('*[id="modal"]').click(function (event) {
                var url = $(this).data('url');                          // url points to handler
                var qry = this.getAttribute('href');                    // query string for <tr> event. append to 'url'
                if (qry != null && qry.startsWith("&", 0)) {
                    url = url + qry;
                }
                //alert(url);
                //$(this).find('.modal-dialog').css({                     // for larger popup window override the model-dialog CSS
                //    width: 'auto',
                //    height: '250px',
                //    'max-height': '300px'
                //});
                $.get(url).done(function (data) {
                    placeholderPopup.html(data);                        // load HTML into 'modal-body' section of this view
                    placeholderPopup.find('.modal').modal('show');      // aria-hidden is toggled to show popup
                });
            });
        })
    </script>
}
@*
    Popup Modal Div.
    wired to Search & New buttons immediately below and the clickable row in the main body of the view.
    populated and revealed by JS above.
*@
<div class="modal fade" tabindex="-1" role="dialog" id="popup-modal">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div id="modal-content" class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Safe Catering Documents</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" title="Cancel & Return To List">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="modal-insert" class="modal-body"></div>
        </div>
    </div>
</div>

<div style="padding: 80px 0 0 0 ;">
    <h5 style="text-align:center">Safe Catering Document Archive</h5>
    @* Create NEW document button *@
    <form asp-page-handler="create" method="get">
        <input type="hidden" asp-for="sCxItem" />
        <input id="modal"
               class="btn btn-sm btn-sm btn-primary create"
               type="button" 
               value="&#43;"
               data-toggle="modal"
               data-target="#popup-modal"
               data-url="@Url.Page("Index", "create")"
               style="float:right; margin:0 0 10px 10px; font-size:larger;"
               title="Create New Document" />
    </form>
    @* Document SEARCH button *@
    <form asp-page-handler="search" method="get">
        <input type="hidden" asp-for="SCxSearchParams" />
        <input id="modal"
               class="btn btn-sm btn-sm btn-primary flipped search"
               type="button" 
               value="&#8981;"
               data-toggle="modal"
               data-target="#popup-modal"
               data-url="@Url.Page("Index", "search")"
               style="float:right; margin:0 0 10px 10px; font-size:larger;"
               title="Search Documents" />
    </form>
</div>
@*
    Main body - documents list in table format...
*@

<table class="table">
    @* Table Headings (Sortable) *@
    <thead>
        <tr style="text-align:center">
            <th id="TimeStamp">
                <form asp-page-handler="sort" asp-route-column="@Html.DisplayNameFor(model => model.sCxItems[0].TimeStamp)" method="post">
                    <input type="submit" value="@Html.DisplayNameFor(model => model.sCxItems[0].TimeStamp)" title="Sort by Date/Time of action" />
                </form>
            </th>
            <th id="Type">
                <form asp-page-handler="sort" asp-route-column="@Html.DisplayNameFor(model => model.sCxItems[0].Type)" method="post">
                    <input type="submit" value="@Html.DisplayNameFor(model => model.sCxItems[0].Type)" title="Sort by Document (SC1: - SC9:)" />
                </form>
            </th>
            <th id="Dept">
                <form asp-page-handler="sort" asp-route-column="@Html.DisplayNameFor(model => model.sCxItems[0].Dept)" method="post">
                    <input type="submit" value="@Html.DisplayNameFor(model => model.sCxItems[0].Dept)" title="Sort by Department (Kitchen, Stores etc)" />
                </form>
            </th>
            <th id="Food">
                <form asp-page-handler="sort" asp-route-column="@Html.DisplayNameFor(model => model.sCxItems[0].Food)" method="post">
                    <input type="submit" value="@Html.DisplayNameFor(model => model.sCxItems[0].Food)" title="Sort by Food/Ingredient" />
                </form>
            </th>
            <th id="SignOff">
                <form asp-page-handler="sort" asp-route-column="@Html.DisplayNameFor(model => model.sCxItems[0].SignOff)" method="post">
                    <input type="submit" value="@Html.DisplayNameFor(model => model.sCxItems[0].SignOff)" title="Sort by Signator" />
                </form>
            </th>
        </tr>
    </thead>
    @* Table Body - itteration of documents - click on row to amend *@
    <tbody>
        @foreach (var item in Model.sCxItems)
        {
            var id = item.Id;
            // setup description from Drop down list for document Type
            var typDesc = Helpers.DropListSCx.FirstOrDefault(listEntry => listEntry.Id.ToString() == item.Type).Text;
            var docMsg = string.Concat("Click to amend Document ",
                                        //"<span style='font-weight:bold'>",
                                        typDesc,
                                        //"</span>",
                                        " for ",
                                        //"<span style='font-weight:bold'>",
                                        item.TimeStamp.ToShortDateString(),
                                        " ",
                                        item.TimeStamp.ToShortTimeString()
                                       //"</span>"
                                       );
            //using var writer = new StringWriter();
            //docMsg.WriteTo(writer, HtmlEncoder);
            ViewData["docMsg"] = docMsg;
            <tr id="modal" 
                class="edit" 
                href="&id=@item.Id" 
                data-toggle="modal" 
                data-target="#popup-modal" 
                data-url="@Url.Page("Index", "edit")" 
                title="@docMsg" 
                style="text-align:center;">
                <td>
                    @Html.DisplayFor(modelItem => item.TimeStamp)
                </td>
                <td>
                    @Html.Raw(typDesc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Dept)
                </td>
                <td style=" max-width: 150px; max-height: 150px; word-wrap:hyphenate">
                    @Html.DisplayFor(modelItem => item.Food, new { @style = " max-width: 150px; max-height: 150px; word-wrap:hyphenate" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignOff)
                </td>
            </tr>
        }
    </tbody>
</table>
